{
  "$id": "https://open-metadata.org/operations/workflows/ingestion.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "IngestionConfig",
  "description": "Ingestion Config is used to setup a Airflow Ingestion pipeline.",
  "type": "object",
  "definitions": {
    "ingestionType": {
      "description": "Type of Ingestion - Bigquery, Redshift, Snowflake etc...",
      "type": "string",
      "enum": [
        "bigquery",
        "bigquery-usage",
        "redshift",
        "redshift-usage",
        "snowflake",
        "snowfalke-usage",
        "hive",
        "mssql",
        "mysql",
        "postgres",
        "trino",
        "vertica"
      ],
      "javaEnums": [
        {
          "name": "bigquery"
        },
        {
          "name": "bigquery-usage"
        },
        {
          "name": "redshift"
        },
        {
          "name": "redshift-usage"
        },
        {
          "name": "snowflake"
        },
        {
          "name": "snowflake-usage"
        },
        {
          "name": "hive"
        },
        {
          "name": "mssql"
        }, {
          "name": "looker"
        },
        {
          "name": "presto"
        },
        {
          "name": "postgres"
        },
        {
          "name": "redash"
        },
        {
          "name": "salesforce"
        },
        {
          "name": "superset"
        },
        {
          "name": "trino"
        },
        {
          "name": "vertica"
        }
      ]
    }
  },
  "properties" : {
    "name": {
      "description": "Name that identifies this ingestion instance uniquely.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "description": {
      "description": "Description of the workflow.",
      "type": "string"
    },
    "forceDeploy": {
      "description": "Deploy the workflow by overwriting existing workflow with the same name.",
      "type": "boolean",
      "default": "false"
    },
    "pauseWorkflow": {
      "description": "pause the workflow from running once the deploy is finished successfully.",
      "type": "boolean",
      "default": "false"
    },
    "concurrency": {
      "description": "Concurrency of the Pipeline.",
      "type": "integer",
      "default": 1
    },
    "startDate": {
      "description": "Start date of the workflow.",
      "type": "string"
    },
    "endDate": {
      "description": "End Date of the workflow.",
      "type": "string"
    },
    "workflowTimezone": {
      "description": "Timezone in which workflow going to be scheduled.",
      "type": "string",
      "default": "UTC"
    },
    "retries": {
      "description": "Retry workflow in case of failure",
      "type": "integer",
      "default": 1
    },
    "retryDelay": {
      "description": "Delay between retries in seconds.",
      "type": "integer",
      "default": 300
    },
    "workflowCatchup": {
      "description": "Workflow catchup for past executions.",
      "type": "boolean",
      "default": "false"
    },
    "scheduleInterval": {
      "description": "Scheduler Interval for the Workflow in cron format.",
      "type": "string"
    },
    "workflowTimeout": {
      "description": "Timeout for the workflow in seconds.",
      "type": "integer",
      "default": 60
    },
    "service" : {
      "description": "Link to the database service where this database is hosted in.",
      "$ref" : "../../schema/type/entityReference.json"
    },
    "includeViews": {
      "description": "optional configuration to turn off fetching metadata for views.",
      "type": "boolean",
      "default": "true"
    },
    "enableDataProfiler": {
      "description": "Run data profiler as part of ingestion to get table profile data.",
      "type": "boolean",
      "default": "false"
    },
    "includeFilterPattern": {
      "description": "Regex to only fetch tables or databases that matches the pattern.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": null
    },
    "excludeFilterPattern": {
      "description": "Regex exclude tables or databases that matches the pattern.",
      "items": {
        "type": "string"
      },
      "default": null
    }

  },
  "required": ["name", "owner", "tasks", "startDate"]
}